#
# Copyright (c) 2024, Auterion AG
# All rights reserved.
#

# Dockerfile for a build environment to build Debian packages

ARG ROS2_DISTRO=humble
ARG UBUNTU_DISTRO=jammy

FROM ros:${ROS2_DISTRO}-ros-base-${UBUNTU_DISTRO}

# Re-request ARGs to make them available in this stage
ARG ROS2_DISTRO

# Since Foxy is EOL, we need to replace the apt keys in the image
RUN if [ "$ROS2_DISTRO" = "foxy" ]; then \
      echo "Warning: Replacing ros2 apt keys for foxy." && \
      rm -f /etc/apt/sources.list.d/ros2* && \
      apt-get update && apt-get install -y curl gnupg && \
      curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key | gpg --dearmor -o /usr/share/keyrings/ros-archive-keyring.gpg && \
      echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" > /etc/apt/sources.list.d/ros2.list; \
    fi

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 4B63CF8FDE49746E98FA01DDAD19BAB3CBF125EA
RUN apt-get update && apt-get install -y \
    dh-make \
    python3-bloom \
    python3-rosdep \
    fakeroot \
    dh-python

# Add auterion cloudsmith
RUN curl -1sLf \
  'https://dl.cloudsmith.io/public/auterion/public/setup.deb.sh' \
  | bash

RUN echo "#!/bin/bash" > /build_package.sh && \
    echo "set -e" >> /build_package.sh && \
    echo "if [[ -f \"/work/rosdep-$ROS2_DISTRO.yaml\" ]]; then" >> /build_package.sh && \
    echo "  /scripts/update_rosdep_yaml.sh /work/rosdep-$ROS2_DISTRO.yaml" >> /build_package.sh && \
    echo "  /scripts/install_rosdeps.py /work/rosdep-$ROS2_DISTRO.yaml" >> /build_package.sh && \
    echo "  echo \"yaml file:///work/rosdep-$ROS2_DISTRO.yaml\" > /etc/ros/rosdep/sources.list.d/99-local.list" >> /build_package.sh && \
    echo "else" >> /build_package.sh && \
    echo "  echo \"rosdep YAML file not found.\"" >> /build_package.sh && \
    echo "fi" >> /build_package.sh && \
    echo "rosdep update --rosdistro=$ROS2_DISTRO" >> /build_package.sh && \
    echo "rosdep install --from-paths . -y -v" >> /build_package.sh && \
    echo "bloom-generate rosdebian" >> /build_package.sh && \
    echo "/scripts/fix_debian_control.sh" >> /build_package.sh && \
    echo "fakeroot debian/rules binary" >> /build_package.sh && \
    echo "mkdir -p /work/output" >> /build_package.sh && \
    echo "cp ../*.deb /work/output" >> /build_package.sh && \
    echo "cp ../*.ddeb /work/output" >> /build_package.sh && \
    chmod +x /build_package.sh

COPY /scripts /scripts
WORKDIR /work

CMD [ "/ros_entrypoint.sh", "/build_package.sh" ]
